{
  "category_name": "main",
  "contest_code": "START209D",
  "contest_name": "Starters 209 (Rated)",
  "status": "success",
  "submit_error": "You need to login to submit.",
  "is_verified": false,
  "problem_code": "P1209",
  "contest_category": "9",
  "problem_name": "Bitcoin Market",
  "intended_contest_code": "START209",
  "body": "This is an example problem statement in markdown, and a mini guide on writing statements. Please make sure to remove everything here before publishing your problem.\n\n- Codechef uses markdown for its problem statements. Markdown syntax can be found [here](https:\/\/github.com\/showdownjs\/showdown\/wiki\/Showdown's-Markdown-syntax). Note the `[text](link)` syntax to insert a hyperlink.\n- Codechef also uses $\\LaTeX$ to render mathematical expressions, and you are advised to make liberal use of it to make your statement look good.\n- Text can be made **bold** or *italicized*.\n- **Do not** use HTML tags (p, ul, li, pre, br, ...) in the statement.\n- To insert an image, first upload it to an online hosting service (for an official contest, ask a Codechef admin to do this for you \u2014 this is important) and then use the following syntax: `![alt text](link-to-image)`.\n- If your problem doesn't contain subtasks, ensure that the Subtasks section below is disabled and **all content is deleted from it**.\n\nIf you face any issues, either contact a Codechef admin directly or send us an email at help@codechef.com.\n\nBelow is an example problem statement that uses some of the above-mentioned features.\n\n---------\n\nChef has a simple undirected graph $G$ with $N$ vertices and $M$ edges. A [subgraph](https:\/\/mathworld.wolfram.com\/Subgraph.html) $H$ of $G$ is called *good* if:\n- $H$ is connected\n- $H$ contains all $N$ vertices of $G$\n- There is a unique path between any two vertices in $H$, using only edges in $H$\n\nCount the number of *good* subgraphs of $G$. Since this number might be large, report it modulo $10^9 + 7$.\n\nIn other news, here's a completely unrelated image:\n\n![](https:\/\/s3.amazonaws.com\/codechef_shared\/download\/Images\/START41\/ss3.png).\n\n\n<aside style='background: #f8f8f8;padding: 10px 15px;'><div>All submissions for this problem are available.<\/div><\/aside>",
  "problemComponents": {
    "constraints": "- $1 \\leq R \\leq 10$",
    "constraintsState": true,
    "subtasks": "- **Subtask 1 (10 points):** $1 \\leq M \\leq 10$\n- **Subtask 2 (20 points):** The sum of $N$ across all test cases won't exceed $20$.\n- **Subtask 3 (70 points):** No further constraints.",
    "subtasksState": false,
    "statement": "Chef has recently started investing in **Bitcoin**.  \nHe assigns a **market risk level** $R$ (from $1$ to $10$), where:  \n\n- $1$ means the market is *very safe*,  \n- $10$ means the market is *very risky*.  \n\nChef will **buy Bitcoin** only if the risk level is **$4$ or less**.  \n\nGiven the current risk level $R$, determine whether Chef should buy Bitcoin.\n\nPrint **\"YES\"** if Chef should buy, otherwise print **\"NO\"**.",
    "inputFormat": "- The first and only line of input contains a single integer $R$ \u2014 the current market risk level.",
    "inputFormatState": true,
    "outputFormat": "Print `YES` if Chef should buy Bitcoin, Otherwise, print `NO`.\n\nYou may print each character of the string in uppercase or lowercase (for example, the strings `YES`, `yEs`, `yes`, and `yeS` will all be treated as identical).\n",
    "outputFormatState": true,
    "sampleTestCases": [
      {
        "id": "1",
        "input": "2",
        "output": "YES",
        "explanation": "The current market risk is $2$.  \nSince $2$ is not larger than $4$, the risk is small enough, and Chef will buy Bitcoin.",
        "isDeleted": false
      },
      {
        "id": "2",
        "input": "4",
        "output": "YES",
        "explanation": "The current market risk is $4$.  \nSince $4$ is not larger than $4$, the risk is small enough, and Chef will buy Bitcoin.",
        "isDeleted": false
      },
      {
        "id": "3",
        "input": "5",
        "output": "NO",
        "explanation": "The current market risk is $5$.  \nSince $5$ is larger than $4$, the risk is too much, and Chef will **not** buy Bitcoin.",
        "isDeleted": false
      }
    ]
  },
  "gumlet_video_url": "",
  "video_editorial_url": "https:\/\/youtu.be\/tjUCV9Ld1Kw?si=minop9943wecj1bh",
  "text_editorial_body": "<h1><a name=\"problem-link-1\" class=\"anchor\" href=\"#problem-link-1\"><\/a>PROBLEM LINK:<\/h1>\n<p><a href=\"https:\/\/www.codechef.com\/problems\/P1209\">Practice<\/a><br>\n<a href=\"https:\/\/www.codechef.com\/START209A\/problems\/P1209\">Contest: Division 1<\/a><br>\n<a href=\"https:\/\/www.codechef.com\/START209B\/problems\/P1209\">Contest: Division 2<\/a><br>\n<a href=\"https:\/\/www.codechef.com\/START209C\/problems\/P1209\">Contest: Division 3<\/a><br>\n<a href=\"https:\/\/www.codechef.com\/START209D\/problems\/P1209\">Contest: Division 4<\/a><\/p>\n<p><em><strong>Author:<\/strong><\/em> <a href=\"https:\/\/www.codechef.com\/users\/pols_agyi_pols\">pols_agyi_pols<\/a><br>\n<em><strong>Tester:<\/strong><\/em> <a href=\"https:\/\/www.codechef.com\/users\/kingmessi\">kingmessi<\/a><br>\n<em><strong>Editorialist:<\/strong><\/em> <a href=\"https:\/\/www.codechef.com\/users\/iceknight1093\">iceknight1093<\/a><\/p>\n<h1><a name=\"difficulty-2\" class=\"anchor\" href=\"#difficulty-2\"><\/a>DIFFICULTY:<\/h1>\n<p>Cakewalk<\/p>\n<h1><a name=\"prerequisites-3\" class=\"anchor\" href=\"#prerequisites-3\"><\/a>PREREQUISITES:<\/h1>\n<p>None<\/p>\n<h1><a name=\"problem-4\" class=\"anchor\" href=\"#problem-4\"><\/a>PROBLEM:<\/h1>\n<p>Chef will buy bitcoin if the market risk level is no more than <span class=\"math\">4<\/span>.<br>\nThe current market risk level is <span class=\"math\">R<\/span>.<br>\nWill Chef buy bitcoin?<\/p>\n<h1><a name=\"explanation-5\" class=\"anchor\" href=\"#explanation-5\"><\/a>EXPLANATION:<\/h1>\n<p>The answer is <code>Yes<\/code> if <span class=\"math\">R \\le 4<\/span> and <code>No<\/code> otherwise.<br>\nThis can be checked using an <code>if<\/code> condition.<\/p>\n<h1><a name=\"time-complexity-6\" class=\"anchor\" href=\"#time-complexity-6\"><\/a>TIME COMPLEXITY:<\/h1>\n<p><span class=\"math\">\\mathcal{O}(1)<\/span> per testcase.<\/p>\n<h1><a name=\"code-7\" class=\"anchor\" href=\"#code-7\"><\/a>CODE:<\/h1>\n<details>\n<summary>\nEditorialist's code (PyPy3)<\/summary>\n<pre><code class=\"lang-python\">r = int(input())\nprint('Yes' if r &lt;= 4 else 'No')\n<\/code><\/pre>\n<\/details>",
  "text_editorial_is_markdown": 0,
  "text_editorial_topic_id": 124410,
  "languages_supported": "CPP20, PYTH 3, C, JAVA, PYP3, CS2, NODEJS, GO, TS, PHP, kotlin, rust, R",
  "max_timelimit": "1",
  "source_sizelimit": "50000",
  "problem_author": "archit_adm",
  "problem_display_authors": ["archit_adm"],
  "problem_display_authors_html_handle": "<div class=\"multiple-usernames-container\"><a href='\/users\/archit_adm'>archit_adm<\/a><\/div>",
  "problem_tester": null,
  "problem_testers_usernames": ["kingmessi"],
  "problem_tester_html_handle": "<div class=\"multiple-usernames-container\"><a href='\/users\/kingmessi'><span \n            class='rating' \n            style='display: inline-block; \n                    font-size: 10px; \n                    background: #D0011B;\n                    padding: 0 3px; \n                    line-height: 1.3; \n                    color: white;\n                    margin-right: 2px;'>7&#9733;<\/span><span class='m-username--link'>kingmessi<\/span><\/a><\/div>",
  "problem_editorialist": "iceknight1093",
  "date_added": "20-10-2025",
  "ready_for_debug": false,
  "problem_stats": {
    "accuracy": 85.780000000000001,
    "successful_submissions": "25325",
    "total_submissions": "33327"
  },
  "user_tags": ["archit_adm", "cakewalk", "start209"],
  "computed_tags": [],
  "difficulty_rating": "172",
  "best_tag": "",
  "editorial_url": "",
  "time": {
    "view_start_date": 1761143406,
    "submit_start_date": 1761143406,
    "visible_start_date": 1761150606,
    "end_date": 1761150606,
    "current": 1761365589,
    "practice_submission_allowed": false
  },
  "user": { "username": null, "access": "default", "isPremiumUser": false },
  "bookmark_status": false,
  "contest_problem_status": "unattempted",
  "problem_status": "unattempted",
  "is_direct_submittable": false,
  "problemDiscussURL": "https:\/\/discuss.codechef.com\/search?q=P1209",
  "is_a_practice_or_college_contest": false,
  "votes_data": {
    "SolutionVoteData": { "upvote_count": 0, "user_vote": 0 },
    "HintsVoteData": { "upvote_count": 0, "user_vote": 0 },
    "ProblemStatementVoteData": { "upvote_count": 26, "user_vote": 0 },
    "DoubtSupportVoteData": { "upvote_count": 0, "user_vote": 0 }
  },
  "is_proctored": false,
  "is_user_verified_for_proctoring": false,
  "visitedContests": [],
  "isSupportedByJudge": true
}
